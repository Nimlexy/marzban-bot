from telegram import Update
from telegram.ext import ContextTypes
from db.models import SessionLocal, User
from bot.marzban_api import get_user_info

async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tg_id = update.effective_user.id

    async with SessionLocal() as session:
        result = await session.execute(
            "SELECT * FROM users WHERE telegram_id = :tg_id",
            {"tg_id": tg_id}
        )
        user = result.fetchone()
        if not user:
            await update.message.reply_text("–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–ø–∏—à–∏ /start.")
            return

        marzban_info = await get_user_info(user.marzban_username)
        if not marzban_info:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç Marzban.")
            return

        quota = marzban_info['data']['usage']['download'] + marzban_info['data']['usage']['upload']
        expiry = marzban_info['data']['expire']

        text = f"""üë§ *–ü—Ä–æ—Ñ–∏–ª—å*
Marzban: `{user.marzban_username}`
üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç: `{expiry}`
üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: `{quota / 1024 / 1024:.2f} MB`"""

        await update.message.reply_text(text, parse_mode="Markdown")
